# INTRO

## Duration: 10 mins

## Motivation
ازيكم يا شباب  أنا احمد حمدي ومعايا
> بترتيب البريزنتيشن
1. مريم 
2. شهاب 
3. أمير 
4. خالد 
5. أسماء 
6. جورج 
---
 وهنتكلم معاكم النهاردا عن
__git & Github__
!عارف إن أغلبكم يعرفهم بس عايزكم النهاردا شبه تنسوا اللي اتعلمتوه عشان غالبا هتكتشفوا انكم فيه حاجات في جيت فاهمينها او بتستخدموها غلط
تعالوا نبدأ ونسأل سؤال ايه هو ال جيت أصلا؟
## What is Git
تعالوا نتخيل موقف انت شغال ع مشروع ما فأنت كل شوية تعدل ف الفايلز اللي عندك وعشان أنت عندك وسواس قهري وخايف إن شغلك يضيع فمحتاج تتابع التغييرات اللي بتحصل في الكود بتاعك وتسجلها ف كل شوية تعمل كوبي وبيست للفايلز بتاعة المشروع عشان متتغيرش

أو نفترض إن انت دخلت القسم وخدت اول بروجكت ليك مع تيم يا اما يبقى فيه جهاز واحد بس اللي عليه الكود وكل واحد يستنى دوره يجي عشان يكتب له سطرين كود او الحل البديل ان كل واحد يشتغل على الجهاز بتاعه ويبقى عنده نسخة من الكود وساعتها هتبني شخصيك على واحدة من الاربعة دول

- نرجع للطرق القديمة ونشير الفايلز مع بعض بفلاشة بس هتقابلكم شوية مشاكل زي انكم مش هتبقوا عارفين التعديل الفلاني مين عمله او لو حابين تلغوا تعديل معين ف الكود عشان عمل مشكلة وخلى الكود كله يضرب   -
 
 - او تحسوا نفسكم متطورين شوية وتبعتوا الفايلز لبعض ع الواتس بس بردو هتقعوا في نفس المشاكل اللي فوق 
 - او عشان تبانوا فورمال اكتر تقرروا تستخدموا جيميل وبردو نفس المشاكل
 - او ليفل الوحش بقه انكم تقرروا تستخدموا جيت و حيت هب عشان تواجهوا المشكلة دي
 ودا يقودنا للسؤال المهم هو  جيت بيعمل ايه بردو 


![meme1](./replace-git.png)

---
زي ما شوفنا في الامثلة اللي فاتت احنا محتاجين حاجة تنظم لنا عملية متابعة وحفظ التغييرات اللي بنعملها ف الكود بتاعنا بحيث نعرف كل تغيير مين عمله وعمله امتى
ومن هنا ظهر احتياجنا  ل version control systems
version control
عبارة عن سيستم بيخلينا نقدر ن keep track لأي تغيير يحصل ف فايل او مجموعة من الفايلز واعرف مين عمل التعديل دا وعمله امتى وليه بحيث يساعدني مثلا لو حصل bug معينة اقدر ارجع لاخر نسخة شغالة من البروجكت واكمل شغل.

version control systems has 3 types: local & central & distributed version control systems

### Local version control:
بيتخزن كل التغييرات ع الفايلز على جهازك وبالتالي لو حصل اي ايرور ف الفايلز او ضاعت بيبقى صعب او مستحيل ترجعها

### Central version control:
بيبقى فيه زي سيرفر او ريبو متخزن عليه الشغل كله وانت عشان تعدل فيه بتبعت ريكويست وتعدل وبعدين تبعت التعديل للسنتر وهناك الادمن يشوف هيقبله والكود الاصلي يتعدل ولا يترفض بس مشكلة السيستم دا ان لو ال central version حصلها اي ايرور وباظت او ضاعت خلاص كدا الكود كله ضاع وهنا تيجي ميزة ال

### Distributed version control system
اللي عبارة عن ميكس بين الاثنين بيمكنك من ان يبقى عندك نسخة من التغييرات اللي حصلت طول المشروع والاكواد بتاعته على جهازك ولو حصل اي حاجة في الكود الاصلي تقدر تبعت الكود بتاعك وتاريخ التعديلات اللي حصلت من ساعة ما المشروع بدأ ولا كإن اي حاجة حصلت وأشهر مثال على الdistributed version control systems هو *git*

## Terminology:
مبدأيا تعالوا نتفق ع شوية مسميات كدا جيت بيتعامل بيهم  زي
### Repositry:
هو المكان او الفولدر اللي git بيخزن فيه الكود واي تغييرات بتحصل فيها 

### Commit:
هو سناب شوت للريبو كلها لما يحصل تغيير في الفايلز بتاعتي في وقت معين وبيبقى معاه تفاصيل زي مين عمل ال commit دا وامتى وعمله ليه عشان يساعدنا في ال tracing بعدين

### Blob (Binary Large Object):
 عبارة عن سناب شوت لفايل في لحظة معينة. وكل مرة بيحصل تغيير في الفايل دا git creates a new blob to represent this change
 
### Tree
 عبارة عن data structure بتعبر عن حالة قولدر في لحظة معينة ومتخزن جواها refernces to the blobs inside it and other subdirectories 
 في لحظة معينة وكل مرة بيحصل تغيير في اي فايل جوا ال tree ساعتها بن create a new tree to represent this change

### Working Tree:
دا عبارة عن current state of the directors and files on your local machine
وممكن تغير في اي فايل فيها طيب تفتكروا هل اول لما نعمل تغيير في ال working tree دا بينعكس على طول في ال repo بتاعتنا؟
*نستنى رد من الجمهور أن لا*
طب حد يعرف عشان اي فايل بعدل فيه بيعدي على كام مرحلة *XD نستنى رد الجمهور أنهم ٣ او لو محدش قال اقول انا*
في الحقيقة زي ما *س* قال اي فايل بعدل فيه بيعدي ب ٣ مراحل هما
Untracked & Staged & Tracked
طب ايه الفرق بينهم
### Untracked:
 في الاول انت عدلت في الفايل بتاعك وسيفته بس لسه جيت موصلهاش خبر بالموضوع دا ف ساعتها بتخش ع المرحلة الثانية 
### Staged:
انت هنا قولت ل جت ان الفايل الفلاني عدلت فيه ف خلي بالك من التعديل بس لسه التعديل دا مسمّعش هناك ف الريبو وممك تضيف كذا تعديل كمان 
### Tracked:
هنا انت قولت ل جت خد التعديلات دي وعدلها ف الريبو  وساعتها جت بيسجل ان ف الوقت كذا فلان عدل ف الفايل كذا والسبب كان كذا وبيبقى فيه مسدج توضح انت ليه عملت ال commitدا 
## How will we move on from now?
طيب عظيم اوي بما ان جيت جامد اوي اكيد لما بنعرفه بنكمل شغلنا طول حياتنا بيه صح؟
 في الحقيقة ان بعد دا ما قعدنا حبة نستخدم جت بنلاقي نفسنا رجعنا لنقطة الصفر تاني
![meme2](./bishoy.png)
لان الفكرة ان اغلبنا مش بنكون متعلمين جيت صح او شبه بنكروته نشوف اي كراش كورس عن اواي ن push & merge conflicts
والسلام!!
دا حتى فيه كتير مننا ميعرفش ان Git and github are not the same thing. 
ودا هنتكلم عليه بعدين
ف تعالوا ناخدكم المرادي في تجربة جديدة عليكم شوية عشان نتعلم ونفهم اكتر جيت/جيتهب
قررنا بدل ما تبقى مجرد محاضرة نشرح فيها ازاي جت بيشتغل وايه الكوماندز بتاعته قولنا ليه منخليش فيه جزء more practical ونخليها workshop
و انتم اللي تجربوا الكوماندز دي بنفسكم 
 فمحتاجين من كل اتنين او ثلاثة يتشاركوا في لاب عشان يطبقوا معانا اول بأول
 عارف الجو حر بس الموضوع هيبقى امتع
 *نستنى شوية لما الناس تتجمع*
طيب يلا نبدأ من الاول خالص وكاننا مكتبناش git command قبل كدا خالص ون set git configurations سوا مع مريم
 
 
